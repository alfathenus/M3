{
    "project": {
        "name": "M3.Charting",
        "description": "M3 charting is a datavisualization librery based on D3.",
        "version": "0.5.0"
    },
    "files": {
        "src\\bk\\Axis.js": {
            "name": "src\\bk\\Axis.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src\\bk\\ColumnChart.js": {
            "name": "src\\bk\\ColumnChart.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src\\bk\\GroupColumnChart.js": {
            "name": "src\\bk\\GroupColumnChart.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src\\bk\\LineChart.js": {
            "name": "src\\bk\\LineChart.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src\\bk\\StackedColumnChart.js": {
            "name": "src\\bk\\StackedColumnChart.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src\\core\\axis\\Axis.js": {
            "name": "src\\core\\axis\\Axis.js",
            "modules": {},
            "classes": {
                "Axis": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\core\\axis\\AxisItem.js": {
            "name": "src\\core\\axis\\AxisItem.js",
            "modules": {
                "M3.Axis": 1
            },
            "classes": {
                "M3.Axis.AxisItem": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\core\\axis\\AxisManager.js": {
            "name": "src\\core\\axis\\AxisManager.js",
            "modules": {},
            "classes": {
                "M3.Axis.AxisManager": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\core\\axis\\CategoryAxis.js": {
            "name": "src\\core\\axis\\CategoryAxis.js",
            "modules": {},
            "classes": {
                "M3.Axis.CategoryAxis": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\core\\axis\\CategoryPointsAxis.js": {
            "name": "src\\core\\axis\\CategoryPointsAxis.js",
            "modules": {},
            "classes": {
                "M3.Axis.CategoryPointsAxis": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\core\\axis\\LinealAxis.js": {
            "name": "src\\core\\axis\\LinealAxis.js",
            "modules": {},
            "classes": {
                "M3.Axis.LinealAxis": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\core\\axis\\Stacked100Axis.js": {
            "name": "src\\core\\axis\\Stacked100Axis.js",
            "modules": {},
            "classes": {
                "M3.Axis.Stacked100Axis": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\core\\axis\\StackedAxis.js": {
            "name": "src\\core\\axis\\StackedAxis.js",
            "modules": {},
            "classes": {
                "M3.Axis.StackedAxis": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\core\\charting\\AreaChart.js": {
            "name": "src\\core\\charting\\AreaChart.js",
            "modules": {},
            "classes": {
                "AreaChart": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\core\\charting\\ColumnChart.js": {
            "name": "src\\core\\charting\\ColumnChart.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src\\core\\charting\\LineChart.js": {
            "name": "src\\core\\charting\\LineChart.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src\\core\\charting\\StackedAreaChart.js": {
            "name": "src\\core\\charting\\StackedAreaChart.js",
            "modules": {},
            "classes": {
                "StackedAreaChart": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\core\\charting\\StackedColumnChart.js": {
            "name": "src\\core\\charting\\StackedColumnChart.js",
            "modules": {},
            "classes": {
                "StackedColumnChart": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\core\\charts\\ColumnChart.js": {
            "name": "src\\core\\charts\\ColumnChart.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src\\core\\charts\\DonutChart.js": {
            "name": "src\\core\\charts\\DonutChart.js",
            "modules": {},
            "classes": {
                "DonutChart": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\core\\charts\\GroupColumnChart.js": {
            "name": "src\\core\\charts\\GroupColumnChart.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src\\core\\charts\\LineChart.js": {
            "name": "src\\core\\charts\\LineChart.js",
            "modules": {},
            "classes": {
                "LineChart": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\core\\charts\\PieChart.js": {
            "name": "src\\core\\charts\\PieChart.js",
            "modules": {},
            "classes": {
                "PieChart": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\core\\charts\\StackedColumnChart.js": {
            "name": "src\\core\\charts\\StackedColumnChart.js",
            "modules": {},
            "classes": {
                "ColumnChart": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\core\\series\\AreaSerie.js": {
            "name": "src\\core\\series\\AreaSerie.js",
            "modules": {},
            "classes": {
                "M3.Series.AreaSerie": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\core\\series\\ChartSerie.js": {
            "name": "src\\core\\series\\ChartSerie.js",
            "modules": {},
            "classes": {
                "M3.Series.ChartSerie": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\core\\series\\ColumnSerie.js": {
            "name": "src\\core\\series\\ColumnSerie.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src\\core\\series\\GroupColumnSerie.js": {
            "name": "src\\core\\series\\GroupColumnSerie.js",
            "modules": {
                "M3.Series": 1
            },
            "classes": {
                "M3.Series.GroupColumnSerie": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\core\\series\\LineSerie.js": {
            "name": "src\\core\\series\\LineSerie.js",
            "modules": {},
            "classes": {
                "M3.Series.ColumnSerie": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\core\\series\\StackedAreaSerie.js": {
            "name": "src\\core\\series\\StackedAreaSerie.js",
            "modules": {},
            "classes": {
                "M3.Series.StackedAreaSerie": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\core\\series\\StackedColumnSerie.js": {
            "name": "src\\core\\series\\StackedColumnSerie.js",
            "modules": {},
            "classes": {
                "M3.Series.StackedSerie": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\core\\series\\zSeries.js": {
            "name": "src\\core\\series\\zSeries.js",
            "modules": {},
            "classes": {
                "Series": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\core\\AbstractCartesianChart.js": {
            "name": "src\\core\\AbstractCartesianChart.js",
            "modules": {
                "M3": 1
            },
            "classes": {
                "M3.AbstractCartesianChart": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\core\\AbstractChart.js": {
            "name": "src\\core\\AbstractChart.js",
            "modules": {},
            "classes": {
                "M3.AbstractChart": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\core\\AbstractPolarChart.js": {
            "name": "src\\core\\AbstractPolarChart.js",
            "modules": {},
            "classes": {
                "M3.AbstractPolarChart": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\core\\Chart.js": {
            "name": "src\\core\\Chart.js",
            "modules": {},
            "classes": {
                "M3.Chart": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\core\\DataViz.js": {
            "name": "src\\core\\DataViz.js",
            "modules": {},
            "classes": {
                "M3.DataViz": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\M3.js": {
            "name": "src\\M3.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {
        "M3": {
            "name": "M3",
            "submodules": {
                "undefined": 1,
                "M3.Axis": 1,
                "M3.Series": 1
            },
            "classes": {
                "M3.Series.ColumnSerie": 1,
                "Axis": 1,
                "ColumnChart": 1,
                "LineChart": 1,
                "M3.Axis.AxisItem": 1,
                "M3.Axis.AxisManager": 1,
                "M3.Axis.CategoryAxis": 1,
                "M3.Axis.CategoryPointsAxis": 1,
                "M3.Axis.LinealAxis": 1,
                "M3.Axis.Stacked100Axis": 1,
                "M3.Axis.StackedAxis": 1,
                "AreaChart": 1,
                "StackedAreaChart": 1,
                "StackedColumnChart": 1,
                "DonutChart": 1,
                "PieChart": 1,
                "M3.Series.AreaSerie": 1,
                "M3.Series.ChartSerie": 1,
                "M3.Series.StackedAreaSerie": 1,
                "M3.Series.StackedSerie": 1,
                "Series": 1,
                "M3.AbstractCartesianChart": 1,
                "M3.AbstractChart": 1,
                "M3.AbstractPolarChart": 1,
                "M3.Chart": 1,
                "M3.DataViz": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src\\core\\DataViz.js",
            "line": 3,
            "description": "Base class for Charts"
        },
        "M3.Axis": {
            "name": "M3.Axis",
            "submodules": {},
            "classes": {
                "M3.Axis.AxisItem": 1,
                "M3.Axis.AxisManager": 1,
                "M3.Axis.CategoryAxis": 1,
                "M3.Axis.CategoryPointsAxis": 1,
                "M3.Axis.LinealAxis": 1,
                "M3.Axis.Stacked100Axis": 1,
                "M3.Axis.StackedAxis": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "M3",
            "namespace": "",
            "file": "src\\core\\axis\\StackedAxis.js",
            "line": 3,
            "description": "Module for axis"
        },
        "M3.Series": {
            "name": "M3.Series",
            "submodules": {},
            "classes": {
                "M3.Series.GroupColumnSerie": 1,
                "M3.Series.AreaSerie": 1,
                "M3.Series.ChartSerie": 1,
                "M3.Series.ColumnSerie": 1,
                "M3.Series.StackedAreaSerie": 1,
                "M3.Series.StackedSerie": 1,
                "Series": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "M3",
            "namespace": "",
            "file": "src\\core\\series\\zSeries.js",
            "line": 4,
            "description": "Series Module",
            "tag": "module"
        }
    },
    "classes": {
        "Axis": {
            "name": "Axis",
            "shortname": "Axis",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "M3",
            "file": "src\\core\\axis\\Axis.js",
            "line": 3,
            "description": "Class to manage Axis",
            "is_constructor": 1
        },
        "ColumnChart": {
            "name": "ColumnChart",
            "shortname": "ColumnChart",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "M3",
            "file": "src\\core\\charts\\StackedColumnChart.js",
            "line": 3,
            "is_constructor": 1,
            "description": "Base class for Charts"
        },
        "LineChart": {
            "name": "LineChart",
            "shortname": "LineChart",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "M3",
            "file": "src\\core\\charts\\LineChart.js",
            "line": 3,
            "is_constructor": 1,
            "description": "Base class for Charts"
        },
        "M3.Axis.AxisItem": {
            "name": "M3.Axis.AxisItem",
            "shortname": "M3.Axis.AxisItem",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "M3",
            "submodule": "M3.Axis",
            "namespace": "",
            "file": "src\\core\\axis\\AxisItem.js",
            "line": 12,
            "description": "Class to draw an Axis.",
            "is_constructor": 1,
            "example": [
                " \n    var width = 200, height:100. xOffset = 10, yOffset = 10;\n    var axis = new M3.AxisItem();\n    axis.config(config).canvas(d3.select(\".m3 .canvas\")).data(datos).draw(width, height, xOffset, yOffset);"
            ]
        },
        "M3.Axis.AxisManager": {
            "name": "M3.Axis.AxisManager",
            "shortname": "M3.Axis.AxisManager",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "M3",
            "namespace": "",
            "file": "src\\core\\axis\\AxisManager.js",
            "line": 3,
            "description": "Class to manage Axis",
            "submodule": "M3.Axis",
            "is_constructor": 1
        },
        "M3.Axis.CategoryAxis": {
            "name": "M3.Axis.CategoryAxis",
            "shortname": "M3.Axis.CategoryAxis",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "M3",
            "namespace": "",
            "file": "src\\core\\axis\\CategoryAxis.js",
            "line": 3,
            "description": "Class to manage Axis\n\nThis class add some config properties\n\n<table>\n    <thead>\n        <tr><th>Config property</th><th>Default</th><th>Description</th></tr>\n    </thead>\n    <tbody>\n        <tr><td>padding</td><td>0.1</td><td>Padding between steps on category axis</td></tr>\n        <tr><td>outterPadding</td><td>0</td><td>Padding between columns with the border of chart</td></tr>\n        <tr><td>rotate</td><td>\"none\"</td><td>Rotacion de los labels de los ticks [none, diagonal, vertical, verticalInv]</td></tr>\n    </tbody>\n</table>",
            "submodule": "M3.Axis",
            "is_constructor": 1,
            "extends": "M3.Axis.AxisItem"
        },
        "M3.Axis.CategoryPointsAxis": {
            "name": "M3.Axis.CategoryPointsAxis",
            "shortname": "M3.Axis.CategoryPointsAxis",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "M3",
            "namespace": "",
            "file": "src\\core\\axis\\CategoryPointsAxis.js",
            "line": 3,
            "description": "Class to manage Axis",
            "submodule": "M3.Axis",
            "is_constructor": 1,
            "extends": "M3.Axis.CategoryAxis"
        },
        "M3.Axis.LinealAxis": {
            "name": "M3.Axis.LinealAxis",
            "shortname": "M3.Axis.LinealAxis",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "M3",
            "namespace": "",
            "file": "src\\core\\axis\\LinealAxis.js",
            "line": 3,
            "description": "Class to manage Axis",
            "submodule": "M3.Axis",
            "is_constructor": 1,
            "extends": "M3.Axis.AxisItem"
        },
        "M3.Axis.Stacked100Axis": {
            "name": "M3.Axis.Stacked100Axis",
            "shortname": "M3.Axis.Stacked100Axis",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "M3",
            "namespace": "",
            "file": "src\\core\\axis\\Stacked100Axis.js",
            "line": 3,
            "description": "Class to manage Axis",
            "submodule": "M3.Axis",
            "is_constructor": 1,
            "extends": "M3.Axis.LinealAxis"
        },
        "M3.Axis.StackedAxis": {
            "name": "M3.Axis.StackedAxis",
            "shortname": "M3.Axis.StackedAxis",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "M3",
            "namespace": "",
            "file": "src\\core\\axis\\StackedAxis.js",
            "line": 3,
            "description": "Class to manage Axis",
            "submodule": "M3.Axis",
            "is_constructor": 1,
            "extends": "M3.Axis.LinealAxis"
        },
        "AreaChart": {
            "name": "AreaChart",
            "shortname": "AreaChart",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "M3",
            "namespace": "",
            "file": "src\\core\\charting\\AreaChart.js",
            "line": 3,
            "description": "Base class for Charts",
            "is_constructor": 1
        },
        "StackedAreaChart": {
            "name": "StackedAreaChart",
            "shortname": "StackedAreaChart",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "M3",
            "namespace": "",
            "file": "src\\core\\charting\\StackedAreaChart.js",
            "line": 3,
            "description": "Base class for Charts",
            "is_constructor": 1
        },
        "StackedColumnChart": {
            "name": "StackedColumnChart",
            "shortname": "StackedColumnChart",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "M3",
            "namespace": "",
            "file": "src\\core\\charting\\StackedColumnChart.js",
            "line": 3,
            "description": "Base class for Charts",
            "is_constructor": 1
        },
        "DonutChart": {
            "name": "DonutChart",
            "shortname": "DonutChart",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "M3",
            "namespace": "",
            "file": "src\\core\\charts\\DonutChart.js",
            "line": 3,
            "is_constructor": 1
        },
        "PieChart": {
            "name": "PieChart",
            "shortname": "PieChart",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "M3",
            "namespace": "",
            "file": "src\\core\\charts\\PieChart.js",
            "line": 3,
            "is_constructor": 1
        },
        "M3.Series.AreaSerie": {
            "name": "M3.Series.AreaSerie",
            "shortname": "M3.Series.AreaSerie",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "M3",
            "namespace": "",
            "file": "src\\core\\series\\AreaSerie.js",
            "line": 3,
            "submodule": "M3.Series",
            "is_constructor": 1,
            "extends": "M3.Series.ChartSerie"
        },
        "M3.Series.ChartSerie": {
            "name": "M3.Series.ChartSerie",
            "shortname": "M3.Series.ChartSerie",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "M3",
            "submodule": "M3.Series",
            "namespace": "",
            "file": "src\\core\\series\\ChartSerie.js",
            "line": 12,
            "is_constructor": 1
        },
        "M3.Series.ColumnSerie": {
            "name": "M3.Series.ColumnSerie",
            "shortname": "M3.Series.ColumnSerie",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "M3",
            "namespace": "",
            "file": "src\\core\\series\\LineSerie.js",
            "line": 3,
            "is_constructor": 1,
            "extends": "M3.Series.ChartSerie",
            "submodule": "M3.Series"
        },
        "M3.Series.GroupColumnSerie": {
            "name": "M3.Series.GroupColumnSerie",
            "shortname": "M3.Series.GroupColumnSerie",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "M3.Series",
            "namespace": "",
            "file": "src\\core\\series\\GroupColumnSerie.js",
            "line": 3,
            "is_constructor": 1,
            "extends": "M3.Series.ChartSerie"
        },
        "M3.Series.StackedAreaSerie": {
            "name": "M3.Series.StackedAreaSerie",
            "shortname": "M3.Series.StackedAreaSerie",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "M3",
            "namespace": "",
            "file": "src\\core\\series\\StackedAreaSerie.js",
            "line": 3,
            "submodule": "M3.Series",
            "is_constructor": 1,
            "extends": "M3.Series.ChartSerie"
        },
        "M3.Series.StackedSerie": {
            "name": "M3.Series.StackedSerie",
            "shortname": "M3.Series.StackedSerie",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "M3",
            "namespace": "",
            "file": "src\\core\\series\\StackedColumnSerie.js",
            "line": 3,
            "submodule": "M3.Series",
            "is_constructor": 1,
            "extends": "M3.Series.ChartSerie"
        },
        "Series": {
            "name": "Series",
            "shortname": "Series",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "M3",
            "submodule": "M3.Series",
            "namespace": "",
            "file": "src\\core\\series\\zSeries.js",
            "line": 4,
            "description": "Series Module"
        },
        "M3.AbstractCartesianChart": {
            "name": "M3.AbstractCartesianChart",
            "shortname": "M3.AbstractCartesianChart",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "M3",
            "namespace": "",
            "file": "src\\core\\AbstractCartesianChart.js",
            "line": 3,
            "description": "Base class for Charts",
            "is_constructor": 1,
            "extends": "M3.AbstractChart"
        },
        "M3.AbstractChart": {
            "name": "M3.AbstractChart",
            "shortname": "M3.AbstractChart",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "M3",
            "namespace": "",
            "file": "src\\core\\AbstractChart.js",
            "line": 3,
            "description": "Base class for Charts",
            "is_constructor": 1,
            "exteds": "M3.DataViz"
        },
        "M3.AbstractPolarChart": {
            "name": "M3.AbstractPolarChart",
            "shortname": "M3.AbstractPolarChart",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "M3",
            "namespace": "",
            "file": "src\\core\\AbstractPolarChart.js",
            "line": 3,
            "is_constructor": 1,
            "extends": "M3.AbstractChart"
        },
        "M3.Chart": {
            "name": "M3.Chart",
            "shortname": "M3.Chart",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "M3",
            "namespace": "",
            "file": "src\\core\\Chart.js",
            "line": 3,
            "description": "Base class for Charts.",
            "example": [
                "\n    var configMixed = {\n        container:\"#axis19\",\n        width:350,\n        height:198,\n        margin:{bottom:20, top:5, left:5, right:5},\n        axis: [{pos:\"left\", clazz:\"Axis.LinealAxis\"},{pos:\"bottom\", clazz:\"Axis.CategoryAxix\", serie:\"label\"}],\n        series: [{\n            y:\"left\",\n            x:\"bottom\",\n            clazz:\"ColumnSerie\",\n        }]\n    };\n    var chart = new M3.Chart();\n    chart.draw([{label:\"Argentina\", value:3455645}, {label:\"Brasil\", value:234234}], configMixed);"
            ],
            "is_constructor": 1,
            "extends": "M3.AbstractChart"
        },
        "M3.DataViz": {
            "name": "M3.DataViz",
            "shortname": "M3.DataViz",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "M3",
            "namespace": "",
            "file": "src\\core\\DataViz.js",
            "line": 3,
            "description": "Base class for datavisualizations",
            "is_constructor": 1
        }
    },
    "classitems": [
        {
            "file": "src\\bk\\Axis.js",
            "line": 13,
            "itemtype": "property",
            "name": "data",
            "class": "Axis"
        },
        {
            "file": "src\\bk\\Axis.js",
            "line": 17,
            "itemtype": "property",
            "name": "config",
            "class": "Axis"
        },
        {
            "file": "src\\bk\\Axis.js",
            "line": 21,
            "itemtype": "property",
            "name": "canvas",
            "class": "Axis"
        },
        {
            "file": "src\\bk\\Axis.js",
            "line": 25,
            "itemtype": "property",
            "name": "hasXBottom",
            "class": "Axis"
        },
        {
            "file": "src\\bk\\Axis.js",
            "line": 29,
            "itemtype": "property",
            "name": "hasXLeft",
            "class": "Axis"
        },
        {
            "file": "src\\bk\\Axis.js",
            "line": 33,
            "itemtype": "property",
            "name": "hasYRight",
            "class": "Axis"
        },
        {
            "file": "src\\bk\\Axis.js",
            "line": 37,
            "itemtype": "property",
            "name": "hasXTop",
            "class": "Axis"
        },
        {
            "file": "src\\bk\\Axis.js",
            "line": 49,
            "description": "Devuelve el texto del label del axis si es outer",
            "itemtype": "method",
            "name": "hasAxisOuterLabel",
            "params": [
                {
                    "name": "axis",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "orient",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "Axis"
        },
        {
            "file": "src\\bk\\Axis.js",
            "line": 66,
            "description": "Devuelve el texto del label del axis si es inner",
            "itemtype": "method",
            "name": "hasAxisInnerLabel",
            "params": [
                {
                    "name": "axis",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "orient",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "Axis"
        },
        {
            "file": "src\\bk\\Axis.js",
            "line": 83,
            "description": "Get scale for x axis.",
            "itemtype": "method",
            "name": "getXScale",
            "params": [
                {
                    "name": "orient",
                    "description": "[top, bottom].",
                    "type": "String"
                }
            ],
            "return": {
                "description": "A d3.scale() with configuration applied."
            },
            "class": "Axis"
        },
        {
            "file": "src\\bk\\Axis.js",
            "line": 117,
            "description": "Get X Axis with some orientation.",
            "itemtype": "method",
            "name": "getXAxis",
            "params": [
                {
                    "name": "orient",
                    "description": "[top, bottom].",
                    "type": "String"
                }
            ],
            "return": {
                "description": "A d3.svg.axis() with the configuratino applied."
            },
            "class": "Axis"
        },
        {
            "file": "src\\bk\\Axis.js",
            "line": 131,
            "description": "Get scale for y axis.",
            "itemtype": "method",
            "name": "getYScale",
            "params": [
                {
                    "name": "orient",
                    "description": "[top, bottom].",
                    "type": "String"
                }
            ],
            "return": {
                "description": "A d3.scale() with configuration applied."
            },
            "class": "Axis"
        },
        {
            "file": "src\\bk\\Axis.js",
            "line": 163,
            "description": "Get Y Axis with some orientation.",
            "itemtype": "method",
            "name": "getYAxis",
            "params": [
                {
                    "name": "orient",
                    "description": "[left, right].",
                    "type": "String"
                }
            ],
            "return": {
                "description": "A d3.svg.axis() with the configuratino applied."
            },
            "class": "Axis"
        },
        {
            "file": "src\\bk\\Axis.js",
            "line": 184,
            "description": "Add SVG for axis to the canvas",
            "itemtype": "method",
            "name": "addAxes",
            "params": [
                {
                    "name": "canvas",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "x",
                    "description": "Offset X",
                    "type": "String"
                },
                {
                    "name": "y",
                    "description": "Offset Y",
                    "type": "String"
                },
                {
                    "name": "axis",
                    "description": "[x, y]",
                    "type": "String"
                },
                {
                    "name": "orient",
                    "description": "[top, bottom, left, right]",
                    "type": "String"
                }
            ],
            "class": "Axis"
        },
        {
            "file": "src\\bk\\Axis.js",
            "line": 212,
            "description": "Add a axis label",
            "itemtype": "method",
            "name": "addLabel",
            "params": [
                {
                    "name": "axis",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "orient",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "Axis"
        },
        {
            "file": "src\\bk\\Axis.js",
            "line": 278,
            "description": "Add Axis to canvas",
            "itemtype": "method",
            "name": "addAllAxis",
            "params": [
                {
                    "name": "bottom",
                    "description": "",
                    "type": "Boolean"
                },
                {
                    "name": "left",
                    "description": "",
                    "type": "Boolean"
                },
                {
                    "name": "right",
                    "description": "",
                    "type": "Boolean"
                },
                {
                    "name": "top",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "class": "Axis"
        },
        {
            "file": "src\\core\\axis\\Axis.js",
            "line": 13,
            "itemtype": "property",
            "name": "data",
            "class": "Axis"
        },
        {
            "file": "src\\core\\axis\\Axis.js",
            "line": 17,
            "itemtype": "property",
            "name": "config",
            "class": "Axis"
        },
        {
            "file": "src\\core\\axis\\Axis.js",
            "line": 21,
            "itemtype": "property",
            "name": "canvas",
            "class": "Axis"
        },
        {
            "file": "src\\core\\axis\\Axis.js",
            "line": 25,
            "itemtype": "property",
            "name": "hasXBottom",
            "class": "Axis"
        },
        {
            "file": "src\\core\\axis\\Axis.js",
            "line": 29,
            "itemtype": "property",
            "name": "hasXLeft",
            "class": "Axis"
        },
        {
            "file": "src\\core\\axis\\Axis.js",
            "line": 33,
            "itemtype": "property",
            "name": "hasYRight",
            "class": "Axis"
        },
        {
            "file": "src\\core\\axis\\Axis.js",
            "line": 37,
            "itemtype": "property",
            "name": "hasXTop",
            "class": "Axis"
        },
        {
            "file": "src\\core\\axis\\Axis.js",
            "line": 49,
            "description": "Devuelve el texto del label del axis si es outer",
            "itemtype": "method",
            "name": "hasAxisOuterLabel",
            "params": [
                {
                    "name": "axis",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "orient",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "Axis"
        },
        {
            "file": "src\\core\\axis\\Axis.js",
            "line": 66,
            "description": "Devuelve el texto del label del axis si es inner",
            "itemtype": "method",
            "name": "hasAxisInnerLabel",
            "params": [
                {
                    "name": "axis",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "orient",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "Axis"
        },
        {
            "file": "src\\core\\axis\\Axis.js",
            "line": 83,
            "description": "Get scale for x axis.",
            "itemtype": "method",
            "name": "getXScale",
            "params": [
                {
                    "name": "orient",
                    "description": "[top, bottom].",
                    "type": "String"
                }
            ],
            "return": {
                "description": "A d3.scale() with configuration applied."
            },
            "class": "Axis"
        },
        {
            "file": "src\\core\\axis\\Axis.js",
            "line": 117,
            "description": "Get X Axis with some orientation.",
            "itemtype": "method",
            "name": "getXAxis",
            "params": [
                {
                    "name": "orient",
                    "description": "[top, bottom].",
                    "type": "String"
                }
            ],
            "return": {
                "description": "A d3.svg.axis() with the configuratino applied."
            },
            "class": "Axis"
        },
        {
            "file": "src\\core\\axis\\Axis.js",
            "line": 131,
            "description": "Get scale for y axis.",
            "itemtype": "method",
            "name": "getYScale",
            "params": [
                {
                    "name": "orient",
                    "description": "[top, bottom].",
                    "type": "String"
                }
            ],
            "return": {
                "description": "A d3.scale() with configuration applied."
            },
            "class": "Axis"
        },
        {
            "file": "src\\core\\axis\\Axis.js",
            "line": 163,
            "description": "Get Y Axis with some orientation.",
            "itemtype": "method",
            "name": "getYAxis",
            "params": [
                {
                    "name": "orient",
                    "description": "[left, right].",
                    "type": "String"
                }
            ],
            "return": {
                "description": "A d3.svg.axis() with the configuratino applied."
            },
            "class": "Axis"
        },
        {
            "file": "src\\core\\axis\\Axis.js",
            "line": 184,
            "description": "Add SVG for axis to the canvas",
            "itemtype": "method",
            "name": "addAxes",
            "params": [
                {
                    "name": "canvas",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "x",
                    "description": "Offset X",
                    "type": "String"
                },
                {
                    "name": "y",
                    "description": "Offset Y",
                    "type": "String"
                },
                {
                    "name": "axis",
                    "description": "[x, y]",
                    "type": "String"
                },
                {
                    "name": "orient",
                    "description": "[top, bottom, left, right]",
                    "type": "String"
                }
            ],
            "class": "Axis"
        },
        {
            "file": "src\\core\\axis\\Axis.js",
            "line": 212,
            "description": "Add a axis label",
            "itemtype": "method",
            "name": "addLabel",
            "params": [
                {
                    "name": "axis",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "orient",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "Axis"
        },
        {
            "file": "src\\core\\axis\\Axis.js",
            "line": 278,
            "description": "Add Axis to canvas",
            "itemtype": "method",
            "name": "addAllAxis",
            "params": [
                {
                    "name": "bottom",
                    "description": "",
                    "type": "Boolean"
                },
                {
                    "name": "left",
                    "description": "",
                    "type": "Boolean"
                },
                {
                    "name": "right",
                    "description": "",
                    "type": "Boolean"
                },
                {
                    "name": "top",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "class": "Axis"
        },
        {
            "file": "src\\core\\axis\\AxisItem.js",
            "line": 36,
            "description": "Set the Canvas chart. Is the place where the axis will be drawn.",
            "itemtype": "method",
            "name": "canvas",
            "params": [
                {
                    "name": "value",
                    "description": "Reference to a svg element",
                    "type": "Object"
                }
            ],
            "chainable": 1,
            "return": {
                "description": "AxisItem (this)."
            },
            "class": "M3.Axis.AxisItem",
            "module": "M3",
            "submodule": "M3.Axis"
        },
        {
            "file": "src\\core\\axis\\AxisItem.js",
            "line": 49,
            "description": "Extend the settings passed as a parameter to add the missing properties.\n\nDefault properties:\n{\n\n}",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "defaultConfig.",
            "params": [
                {
                    "name": "conf",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "A mixin object between conf and default object properties."
            },
            "todo": [
                "Refactoring: pasar la configuracion default que esta en AxisMAnager acá"
            ],
            "class": "M3.Axis.AxisItem",
            "module": "M3",
            "submodule": "M3.Axis"
        },
        {
            "file": "src\\core\\axis\\AxisItem.js",
            "line": 70,
            "description": "Set the configuration to the axis\n\n__Properties accepted:__\n<table>\n    <thead>\n        <tr><th>Config property</th><th>Optional</th><th>Default</th><th>Description</th></tr>\n    </thead>\n    <tbody>\n        <tr><td>pos</td><td>No</td><td></td><td>Posicion del eje [left, right, bottom, top].</td></tr>\n        <tr><td>label</td><td>Yes</td>Empty value<td></td><td>Nombre del eje.</td></tr>\n        <tr><td>labelPosition</td><td>Yes</td><td>none</td><td>[none, inner, outer] @default outer.</td></tr>\n        <tr><td>serie</td><td>Yes</td><td>value</td><td>Nombre de la propiedad que se mostrará sobre el eje. Puede ser un string o un array si varias series se plotean sobre el eje.</td></tr>\n        <tr><td>width</td><td>Yes</td><td>35 for y axis, 20 for x axis</td><td>Ancho del espacio del eje.</td></tr>\n        <tr><td>show</td><td>Yes</td><td>True</td><td>Indica si se visualiza o no el eje.</td></tr>\n        <tr><td>labelWidth</td><td>Yes</td><td>18</td><td>Ancho del espacio para el label del eje.</td></tr>\n        <tr><td>clazz</td><td>Yes</td><td>Axis.LinealAxis</td><td>Nombre de la clase del axis a crear.</td></tr>\n        <tr><td>axis</td><td>Yes</td><td>y when pos is left/right, x when pos is top/bottom</td><td>[x,y].</td></tr>\n        <tr><td>ticketSize</td><td>Yes</td><td>6 (d3 defaul)</td><td>The size of de line of each tick on the axis (default: 6).</td></tr>\n        <tr><td>tickPadding</td><td>Yes</td><td>3 (d3 default)</td><td>The space between the line tick with the label of tick.</td></tr>\n        <tr><td>tickFormat</td><td>Yes</td><td>\"s\" (d3 default format). For x axis don't trasnform the label</td><td>Format function for each tick label.\n        If chart config has _labelFormat_ or/and _valueFormat_ it's are the default values.<br>_Example:_\n            function(d, indx) {\n                return d3.format(\"s\");\n            }\n        </td></tr>\n    </tbdoy>\n</table>",
            "itemtype": "method",
            "name": "config",
            "params": [
                {
                    "name": "value",
                    "description": "",
                    "type": "Object"
                }
            ],
            "chainable": 1,
            "return": {
                "description": "Mixed object between value and default properties."
            },
            "class": "M3.Axis.AxisItem",
            "module": "M3",
            "submodule": "M3.Axis"
        },
        {
            "file": "src\\core\\axis\\AxisItem.js",
            "line": 109,
            "description": "Set data values.",
            "itemtype": "method",
            "name": "data",
            "params": [
                {
                    "name": "value",
                    "description": "",
                    "type": "Array"
                }
            ],
            "chainable": 1,
            "return": {
                "description": "AxisItem (this)"
            },
            "class": "M3.Axis.AxisItem",
            "module": "M3",
            "submodule": "M3.Axis"
        },
        {
            "file": "src\\core\\axis\\AxisItem.js",
            "line": 122,
            "description": "Get the scale for the axis. \n(Scale factory)",
            "itemtype": "method",
            "name": "getAxisScale",
            "params": [
                {
                    "name": "values",
                    "description": ""
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "M3.Axis.AxisItem",
            "module": "M3",
            "submodule": "M3.Axis"
        },
        {
            "file": "src\\core\\axis\\AxisItem.js",
            "line": 140,
            "description": "Set the scale for the axis",
            "itemtype": "method",
            "name": "getScale",
            "access": "protected",
            "tagname": "",
            "class": "M3.Axis.AxisItem",
            "module": "M3",
            "submodule": "M3.Axis"
        },
        {
            "file": "src\\core\\axis\\AxisItem.js",
            "line": 159,
            "description": "Create the d3 axis.",
            "itemtype": "method",
            "name": "getAxis",
            "return": {
                "description": "D3 axis reference."
            },
            "access": "protected",
            "tagname": "",
            "class": "M3.Axis.AxisItem",
            "module": "M3",
            "submodule": "M3.Axis"
        },
        {
            "file": "src\\core\\axis\\AxisItem.js",
            "line": 180,
            "description": "Add a rect as backgroud for the axis.",
            "itemtype": "method",
            "name": "addRect",
            "params": [
                {
                    "name": "elem",
                    "description": "reference to the axis avg.",
                    "type": "Object"
                },
                {
                    "name": "w",
                    "description": "With of the rectange background",
                    "type": "Number"
                },
                {
                    "name": "h",
                    "description": "Heigt of the rectange background",
                    "type": "Number"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "M3.Axis.AxisItem",
            "module": "M3",
            "submodule": "M3.Axis"
        },
        {
            "file": "src\\core\\axis\\AxisItem.js",
            "line": 198,
            "description": "Add Axis label (title).",
            "itemtype": "method",
            "name": "addLabel",
            "params": [
                {
                    "name": "elem",
                    "description": "reference to axis svg.",
                    "type": "Object"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "M3.Axis.AxisItem",
            "module": "M3",
            "submodule": "M3.Axis"
        },
        {
            "file": "src\\core\\axis\\AxisItem.js",
            "line": 243,
            "description": "Draw the axis into the canvas.",
            "itemtype": "method",
            "name": "draw",
            "params": [
                {
                    "name": "w",
                    "description": "Wicth of the axis",
                    "type": "Number"
                },
                {
                    "name": "h",
                    "description": "Height of the axis",
                    "type": "Number"
                },
                {
                    "name": "x",
                    "description": "Offsset from the left border canvas",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "Offsset from the left border canvas",
                    "type": "Number"
                }
            ],
            "chainable": 1,
            "class": "M3.Axis.AxisItem",
            "module": "M3",
            "submodule": "M3.Axis"
        },
        {
            "file": "src\\core\\axis\\AxisManager.js",
            "line": 18,
            "description": "Set Axis configuration.",
            "itemtype": "method",
            "name": "setConfig",
            "params": [
                {
                    "name": "value",
                    "description": "Configuration Values",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "AxisManager (this)"
            },
            "chainable": 1,
            "class": "M3.Axis.AxisManager",
            "module": "M3",
            "submodule": "M3.Axis"
        },
        {
            "file": "src\\core\\axis\\AxisManager.js",
            "line": 31,
            "description": "Set data to display on datavisualization. It's used to define the domain and axis limits.",
            "itemtype": "method",
            "name": "setData",
            "params": [
                {
                    "name": "value",
                    "description": "",
                    "type": "Array"
                }
            ],
            "chainable": 1,
            "class": "M3.Axis.AxisManager",
            "module": "M3",
            "submodule": "M3.Axis"
        },
        {
            "file": "src\\core\\axis\\AxisManager.js",
            "line": 43,
            "description": "Shows and draws the axis.",
            "itemtype": "method",
            "name": "show",
            "params": [
                {
                    "name": "data",
                    "description": "",
                    "type": "Array",
                    "optional": true
                },
                {
                    "name": "config",
                    "description": "",
                    "type": "Array",
                    "optional": true
                }
            ],
            "chainable": 1,
            "class": "M3.Axis.AxisManager",
            "module": "M3",
            "submodule": "M3.Axis"
        },
        {
            "file": "src\\core\\axis\\AxisManager.js",
            "line": 76,
            "description": "Draw rigth axis",
            "itemtype": "method",
            "name": "drawRightxis",
            "params": [
                {
                    "name": "axis",
                    "description": "",
                    "type": "Object"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "M3.Axis.AxisManager",
            "module": "M3",
            "submodule": "M3.Axis"
        },
        {
            "file": "src\\core\\axis\\AxisManager.js",
            "line": 100,
            "description": "Draw left axis",
            "itemtype": "method",
            "name": "drawLeftAxis",
            "params": [
                {
                    "name": "axis",
                    "description": "",
                    "type": "Object"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "M3.Axis.AxisManager",
            "module": "M3",
            "submodule": "M3.Axis"
        },
        {
            "file": "src\\core\\axis\\AxisManager.js",
            "line": 124,
            "description": "Draw bottom axis",
            "itemtype": "method",
            "name": "drawBottomAxis",
            "params": [
                {
                    "name": "axis",
                    "description": "",
                    "type": "Object"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "M3.Axis.AxisManager",
            "module": "M3",
            "submodule": "M3.Axis"
        },
        {
            "file": "src\\core\\axis\\AxisManager.js",
            "line": 148,
            "description": "Draw top axis",
            "itemtype": "method",
            "name": "drawTopAxis",
            "params": [
                {
                    "name": "axis",
                    "description": "",
                    "type": "Object"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "M3.Axis.AxisManager",
            "module": "M3",
            "submodule": "M3.Axis"
        },
        {
            "file": "src\\core\\axis\\AxisManager.js",
            "line": 172,
            "description": "Gets the offset a side of the chart.\nFor example getOffset(\"left\") gets the widht of y left axis that is equal to = \"label width\" + \"axis width\". Where both properties are\ndefined in the configuration object (labelWidth and width).",
            "itemtype": "method",
            "name": "getOffset",
            "params": [
                {
                    "name": "pos",
                    "description": "The side that want to get the offset [left, right, top, bottom]",
                    "type": "String"
                }
            ],
            "return": {
                "description": "A value of offset (Number)."
            },
            "access": "protected",
            "tagname": "",
            "class": "M3.Axis.AxisManager",
            "module": "M3",
            "submodule": "M3.Axis"
        },
        {
            "file": "src\\core\\axis\\AxisManager.js",
            "line": 191,
            "description": "Set default config",
            "itemtype": "method",
            "name": "defaultConf",
            "params": [
                {
                    "name": "conf",
                    "description": ""
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "M3.Axis.AxisManager",
            "module": "M3",
            "submodule": "M3.Axis"
        },
        {
            "file": "src\\core\\axis\\CategoryAxis.js",
            "line": 84,
            "description": "padding between columns with the border of chart",
            "class": "M3.Axis.CategoryAxis",
            "module": "M3",
            "submodule": "M3.Axis"
        },
        {
            "file": "src\\core\\series\\ChartSerie.js",
            "line": 22,
            "description": "Draw the serie",
            "itemtype": "method",
            "name": "draw",
            "params": [
                {
                    "name": "data",
                    "description": "Data to display.",
                    "type": "Array"
                },
                {
                    "name": "conf",
                    "description": "Config of the serie.",
                    "type": "Object"
                },
                {
                    "name": "canvas",
                    "description": "SVG container.",
                    "type": "Object"
                }
            ],
            "para": "indx {Number} The index of the serie.",
            "return": {
                "description": "indx plus the number of series crated."
            },
            "class": "M3.Series.ChartSerie",
            "module": "M3",
            "submodule": "M3.Series"
        },
        {
            "file": "src\\core\\series\\ChartSerie.js",
            "line": 44,
            "description": "Set default config.",
            "itemtype": "method",
            "name": "defaultConfig",
            "params": [
                {
                    "name": "conf",
                    "description": "",
                    "type": "Object"
                }
            ],
            "access": "protected",
            "tagname": "",
            "class": "M3.Series.ChartSerie",
            "module": "M3",
            "submodule": "M3.Series"
        },
        {
            "file": "src\\core\\AbstractCartesianChart.js",
            "line": 13,
            "description": "Reference to axis module.\nSee src/core/axis/Axis.js for more information.",
            "itemtype": "property",
            "name": "axis",
            "class": "M3.AbstractCartesianChart",
            "module": "M3"
        },
        {
            "file": "src\\core\\AbstractCartesianChart.js",
            "line": 21,
            "description": "Add Axis to chart",
            "class": "M3.AbstractCartesianChart",
            "module": "M3"
        },
        {
            "file": "src\\core\\AbstractCartesianChart.js",
            "line": 32,
            "description": "Draw the data",
            "itemtype": "method",
            "name": "drawInner",
            "chainable": 1,
            "class": "M3.AbstractCartesianChart",
            "module": "M3"
        },
        {
            "file": "src\\core\\AbstractCartesianChart.js",
            "line": 78,
            "description": "Set the config properties\nThe same that M3.DataViz plus\n\nDefault values\n    { \n        itemValue: \"value\",\n        itemLabel: \"label,\n        axisYLabel: \"\",\n        axisY2Label: \"\",\n        axisXLabel: \"\",\n        axisX2Label:\"\",\n        axisYPadding:20,\n        yLabelFormat,\n        ticks:NaN\n    }",
            "itemtype": "method",
            "name": "setConfig",
            "chainable": 1,
            "params": [
                {
                    "name": "conf",
                    "description": "object with properties",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Instance reference"
            },
            "class": "M3.AbstractCartesianChart",
            "module": "M3"
        },
        {
            "file": "src\\core\\AbstractChart.js",
            "line": 13,
            "description": "Adds some configuration properties to DataViz. To see the complete list of properties, please go to \nthe super class definition.\n\n<table>\n    <thead>\n        <tr><th>Property</th><th>Default</th><th>Description</th></tr>\n    </thead>\n    <tbody>\n        <tr><td>itemVAlue</td><td>value</td>Property name on data values to get the value</td></tr>\n        <tr><td>itemLabel</td><td>label</td></td></tr>\n        <tr><td>labelFormat</td><td></td></td></tr>\n        <tr><td>defaultValueFormat</td><td></td></td></tr>\n    </tbody>\n</table>",
            "itemtype": "method",
            "name": "setConfig",
            "chainable": 1,
            "params": [
                {
                    "name": "conf",
                    "description": "object with properties",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Instance reference"
            },
            "class": "M3.AbstractChart",
            "module": "M3"
        },
        {
            "file": "src\\core\\AbstractPolarChart.js",
            "line": 11,
            "description": "Referencia a los arcos del piec",
            "itemtype": "property",
            "name": "arc",
            "class": "M3.AbstractPolarChart",
            "module": "M3"
        },
        {
            "file": "src\\core\\AbstractPolarChart.js",
            "line": 16,
            "itemtype": "property",
            "name": "slice",
            "class": "M3.AbstractPolarChart",
            "module": "M3"
        },
        {
            "file": "src\\core\\AbstractPolarChart.js",
            "line": 21,
            "description": "Genera los arcos del Pie",
            "itemtype": "method",
            "name": "getArc",
            "class": "M3.AbstractPolarChart",
            "module": "M3"
        },
        {
            "file": "src\\core\\AbstractPolarChart.js",
            "line": 32,
            "description": "Genera el layout de pie",
            "itemtype": "method",
            "name": "getLayout",
            "class": "M3.AbstractPolarChart",
            "module": "M3"
        },
        {
            "file": "src\\core\\AbstractPolarChart.js",
            "line": 43,
            "description": "Genera los slies del pie",
            "itemtype": "method",
            "name": "addSlices",
            "class": "M3.AbstractPolarChart",
            "module": "M3"
        },
        {
            "file": "src\\core\\Chart.js",
            "line": 30,
            "description": "Create the AxisManger and initilize it.\nIt's called form drawInner function",
            "itemtype": "method",
            "name": "addAxis",
            "access": "protected",
            "tagname": "",
            "class": "M3.Chart",
            "module": "M3"
        },
        {
            "file": "src\\core\\Chart.js",
            "line": 51,
            "description": "Initialize the series items and call to draw function to each.\nIt's called from drawInner function.",
            "itemtype": "method",
            "name": "drawSeries",
            "access": "protected",
            "tagname": "",
            "class": "M3.Chart",
            "module": "M3"
        },
        {
            "file": "src\\core\\Chart.js",
            "line": 85,
            "description": "It's called from drawSeries.",
            "itemtype": "method",
            "name": "configSerie",
            "access": "protected",
            "tagname": "",
            "class": "M3.Chart",
            "module": "M3"
        },
        {
            "file": "src\\core\\Chart.js",
            "line": 101,
            "description": "Adds de SVG item container for series and the background.\nIt's called form drawInner function.",
            "itemtype": "method",
            "name": "drawChartArea",
            "access": "protected",
            "tagname": "",
            "chainable": 1,
            "class": "M3.Chart",
            "module": "M3"
        },
        {
            "file": "src\\core\\DataViz.js",
            "line": 12,
            "description": "Config properties storage.",
            "itemtype": "property",
            "name": "config",
            "class": "M3.DataViz",
            "module": "M3"
        },
        {
            "file": "src\\core\\DataViz.js",
            "line": 18,
            "description": "Data to represent on the datavisualization.",
            "itemtype": "property",
            "name": "data",
            "class": "M3.DataViz",
            "module": "M3"
        },
        {
            "file": "src\\core\\DataViz.js",
            "line": 23,
            "description": "List of behavirours",
            "itemtype": "property",
            "name": "data",
            "class": "M3.DataViz",
            "module": "M3"
        },
        {
            "file": "src\\core\\DataViz.js",
            "line": 29,
            "description": "Set the config properties\n\nDefault values\n<table>\n    <thead>\n        <tr><th>Property</th><th>Default</th><th>Description</th></tr>\n    </thead>\n    <tbody>\n        <tr><td>margin</td><td>{top: 5, bottom: 5, left: 5, right:5, all:NaN}</td><td></td></tr>\n        <tr><td>width</td><td>200</td><td></td></tr>\n        <tr><td>margin</td><td>100</td><td></td></tr>\n        <tr><td>container</td><td>#chartContainer</td><td></td></tr>\n        <tr><td>styles</td><td>{container:\"m3\" canvas:\"canvas\" }</td><td></td></tr>\n    </tbody>\n</table>\n\nOther properties are calculated on runtime.\n\nIf you set margin.all = 15, so margin.left, margin.right, margin.bottom and margin.top are setted to 15.\n\nWith the properties width/height/margin are calculated canvasWidth and canvasHeight. The first is Widh - (margin.left + margin.right)\nand the second is the result of height - (margin.top - margin.bottom).",
            "itemtype": "method",
            "name": "setConfig",
            "chainable": 1,
            "params": [
                {
                    "name": "conf",
                    "description": "object with properties",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Instance reference"
            },
            "class": "M3.DataViz",
            "module": "M3"
        },
        {
            "file": "src\\core\\DataViz.js",
            "line": 89,
            "description": "Set data to viz",
            "itemtype": "method",
            "name": "data",
            "chainable": 1,
            "params": [
                {
                    "name": "data",
                    "description": "",
                    "type": "Array"
                }
            ],
            "class": "M3.DataViz",
            "module": "M3"
        },
        {
            "file": "src\\core\\DataViz.js",
            "line": 100,
            "description": "Draw the datavisualization.",
            "itemtype": "method",
            "name": "draw",
            "params": [
                {
                    "name": "data",
                    "description": "",
                    "type": "Array",
                    "optional": true
                },
                {
                    "name": "config",
                    "description": "",
                    "type": "Object",
                    "optional": true
                }
            ],
            "chainable": 1,
            "class": "M3.DataViz",
            "module": "M3"
        },
        {
            "file": "src\\core\\DataViz.js",
            "line": 126,
            "description": "Draw the data",
            "itemtype": "method",
            "name": "drawInner",
            "chainable": 1,
            "access": "protected",
            "tagname": "",
            "class": "M3.DataViz",
            "module": "M3"
        },
        {
            "file": "src\\core\\DataViz.js",
            "line": 137,
            "description": "Add a viz container (a.k.a SVG element)",
            "itemtype": "method",
            "name": "drawContainer",
            "chainable": 1,
            "access": "protected",
            "tagname": "",
            "class": "M3.DataViz",
            "module": "M3"
        },
        {
            "file": "src\\core\\DataViz.js",
            "line": 159,
            "description": "Draw the \"g\" element into \"svg\" (container) as canvas to draw the viz.",
            "itemtype": "method",
            "name": "drawCanvas",
            "chainable": 1,
            "access": "protected",
            "tagname": "",
            "class": "M3.DataViz",
            "module": "M3"
        },
        {
            "file": "src\\core\\DataViz.js",
            "line": 180,
            "description": "Execute some code before to draw (a.k.a before to start to create the svg object)",
            "itemtype": "method",
            "name": "beforeDraw",
            "access": "protected",
            "tagname": "",
            "class": "M3.DataViz",
            "module": "M3"
        },
        {
            "file": "src\\core\\DataViz.js",
            "line": 189,
            "description": "Execute some code ufter to draw (a.k.a ufter to create all svg of datavisualization)",
            "itemtype": "method",
            "name": "afterDraw",
            "access": "protected",
            "tagname": "",
            "class": "M3.DataViz",
            "module": "M3"
        }
    ],
    "warnings": [
        {
            "message": "unknown tag: para",
            "line": " src\\core\\series\\ChartSerie.js:22"
        },
        {
            "message": "unknown tag: para",
            "line": " src\\core\\series\\ChartSerie.js:22"
        },
        {
            "message": "unknown tag: exteds",
            "line": " src\\core\\AbstractChart.js:3"
        },
        {
            "message": "Missing item type\npadding between columns with the border of chart",
            "line": " src\\core\\axis\\CategoryAxis.js:84"
        },
        {
            "message": "Missing item type\nAdd Axis to chart",
            "line": " src\\core\\AbstractCartesianChart.js:21"
        }
    ]
}