{"version":3,"sources":["../../../src/core/DataViz.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;YA8DI,OAAO,GAAP,OAAO;YAAS,OAAO,GAAd,GAAG","file":"DataViz.js","sourcesContent":["/* global d3 */\nimport {\n    settings\n}\nfrom \"./Settings\"\nimport {\n    DataVizDefaults\n}\nfrom \"./defaults\"\n\nlet drawContainer = function() {\n    let elem = d3.select(this[\"settings\"].data(\"container\"));\n    if (elem) {\n        elem.append(\"svg\")\n            .attr(\"class\", \"m3\")\n            .attr(\"width\", this[\"settings\"].data(\"datavizMinWidth\"))\n            .attr(\"height\", this[\"settings\"].data(\"datavizMinHeigth\"))\n            .append(\"rect\")\n            .attr(\"width\", this[\"settings\"].data(\"datavizMinWidth\"))\n            .attr(\"height\", this[\"settings\"].data(\"datavizMinHeigth\"))\n            .attr(\"class\", \"background\");\n    }\n}\n\n\nclass DataViz {\n    constructor() {\n        console.log(\"Dataviz Constructor\");\n        this[\"settings\"] = settings(DataVizDefaults);\n        this[\"alredyDraw\"] = false;\n    }\n\n    conf(value) {\n        this[\"settings\"].data(value);\n        return this;\n    }\n\n    draw() {\n        if (this[\"alredyDraw\"]) this.clear();\n        drawContainer.call(this);\n\n        this[\"alredyDraw\"] = true;\n        return this;\n    }\n\n    clear() {\n        this.remove();\n        drawContainer.call(this);\n    }\n    \n    remove(){\n        d3.select(this[\"settings\"].data(\"container\") + \" svg\").remove();\n    }\n}\n\n\nfunction foo() {\n    return new DataViz();\n}\n\n\nexport {\n    DataViz, foo as dataviz\n}"]}